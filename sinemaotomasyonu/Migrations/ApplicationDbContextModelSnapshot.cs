// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sinemaotomasyonu.Models;

namespace sinemaotomasyonu.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("sinemaotomasyonu.Models.Filmler", b =>
                {
                    b.Property<int>("filmID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("filmAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("filmKonu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("filmUcret")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("mekanID")
                        .HasColumnType("int");

                    b.HasKey("filmID");

                    b.HasIndex("mekanID");

                    b.ToTable("filmlers");
                });

            modelBuilder.Entity("sinemaotomasyonu.Models.Görevli", b =>
                {
                    b.Property<int>("görevliID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("görevliAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("görevliMaas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("görevliSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("görevliID");

                    b.ToTable("görevlis");
                });

            modelBuilder.Entity("sinemaotomasyonu.Models.Koltuklar", b =>
                {
                    b.Property<int>("koltukID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FilmlerfilmID")
                        .HasColumnType("int");

                    b.Property<int>("filmID")
                        .HasColumnType("int");

                    b.Property<string>("koltukAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("koltukÇeşidi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("koltukID");

                    b.HasIndex("FilmlerfilmID");

                    b.ToTable("koltuklars");
                });

            modelBuilder.Entity("sinemaotomasyonu.Models.Mekan", b =>
                {
                    b.Property<int>("mekanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("mekanAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mekanAdres")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("mekanID");

                    b.ToTable("mekanlars");
                });

            modelBuilder.Entity("sinemaotomasyonu.Models.Seanslar", b =>
                {
                    b.Property<int>("seansID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("görevliID")
                        .HasColumnType("int");

                    b.Property<string>("seansAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("seansSaati")
                        .HasColumnType("datetime2");

                    b.HasKey("seansID");

                    b.HasIndex("görevliID");

                    b.ToTable("seanslars");
                });

            modelBuilder.Entity("sinemaotomasyonu.Models.İzleyiciler", b =>
                {
                    b.Property<int>("izleyiciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SeanslarseansID")
                        .HasColumnType("int");

                    b.Property<string>("izleyiciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("izleyiciSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("seansID")
                        .HasColumnType("int");

                    b.HasKey("izleyiciID");

                    b.HasIndex("SeanslarseansID");

                    b.ToTable("izleyicilers");
                });

            modelBuilder.Entity("sinemaotomasyonu.Models.Filmler", b =>
                {
                    b.HasOne("sinemaotomasyonu.Models.Mekan", "Mekan")
                        .WithMany()
                        .HasForeignKey("mekanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mekan");
                });

            modelBuilder.Entity("sinemaotomasyonu.Models.Koltuklar", b =>
                {
                    b.HasOne("sinemaotomasyonu.Models.Filmler", "Filmler")
                        .WithMany()
                        .HasForeignKey("FilmlerfilmID");

                    b.Navigation("Filmler");
                });

            modelBuilder.Entity("sinemaotomasyonu.Models.Seanslar", b =>
                {
                    b.HasOne("sinemaotomasyonu.Models.Görevli", "Görevli")
                        .WithMany()
                        .HasForeignKey("görevliID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Görevli");
                });

            modelBuilder.Entity("sinemaotomasyonu.Models.İzleyiciler", b =>
                {
                    b.HasOne("sinemaotomasyonu.Models.Seanslar", "Seanslar")
                        .WithMany()
                        .HasForeignKey("SeanslarseansID");

                    b.Navigation("Seanslar");
                });
#pragma warning restore 612, 618
        }
    }
}
